/* 
 * V2 Sell.Kichink
 * Payments
 */

$(document).ready(function() {

    $("#pending-payments").DinamicTable({
        tableClass: "table table-responsive transparent",
        numered: false, //Si va numerada
        selectable: false, //Si lleva checkboxes o no
        types: {
            status: "label",
            total_price: "money",
            time_ago: "time_ago"
        },
        /*dataTable: {
            "sDom": "<'row'<'col-lg-6'l><'col-lg-6'f>r>t<'row'<'col-lg-6'i><'col-lg-6'p>>",
            "sPaginationType": "bootstrap",
            "bFilter": false,
            "bInfo": false,
            "oLanguage": {
                "sInfo": "_START_ - _END_ / _TOTAL_ records",
                "sLengthMenu": "Show _MENU_",
                "sPrevious": "",
                "sNext": ""
            }
        },*/
        actions: [//Tpdas las acciones que quiero agregar
            {
                label: kontrol_lang['payments_view_detail'],
                type: "href",
                href:'/stores/payments/' + store_id + '/'
            }]
    });

    $("#closed-payments").DinamicTable({
        tableClass: "table table-responsive transparent",
        numered: false, //Si va numerada
        selectable: false, //Si lleva checkboxes o no
        types: {
            status: "label",
            total_price: "money",
            time_ago: "time_ago"
        },
        /*dataTable: {
            "sDom": "<'row'<'col-lg-6'l><'col-lg-6'f>r>t<'row'<'col-lg-6'i><'col-lg-6'p>>",
            "sPaginationType": "bootstrap",
            "bFilter": false,
            "bInfo": false,
            "oLanguage": {
                "sInfo": "_START_ - _END_ / _TOTAL_ records",
                "sLengthMenu": "Show _MENU_",
                "sPrevious": "",
                "sNext": ""
            }
        },*/
        actions: [//Tpdas las acciones que quiero agregar
            {
                label: kontrol_lang['payments_view_detail'],
                type: "href",
                href:'/stores/payments/' + store_id + '/'
                
            }],
    });

    $("#available-payments").DinamicTable({
        tableClass: "table table-responsive transparent",
        numered: false, //Si va numerada
        selectable: false, //Si lleva checkboxes o no
        types: {
            status: "label",
            total_price: "money",
            time_ago: "time_ago"
        },
        /*dataTable: {
            "bFilter": false,
            "bInfo": false,
            "sDom": "<'row'<'col-lg-6'l><'col-lg-6'f>r>t<'row'<'col-lg-6'i><'col-lg-6'p>>",
            "sPaginationType": "bootstrap",
            "oLanguage": {
                "sInfo": "_START_ - _END_ / _TOTAL_ records",
                "sLengthMenu": "Show _MENU_",
                "sPrevious": "",
                "sNext": ""
            }
        },*/
        actions: [//Tpdas las acciones que quiero agregar
            {
                label: kontrol_lang['payments_view_detail'],
                type: "href",
                href:'/stores/payments/' + store_id + '/'
            }]
    });

  function get_payments(status, page, limit, currency) {
        call_api('/api/pagos/get_pagos_sell', 'post', {store_id: store_id, status: status, page: page, limit: limit}, function(data) {
            var obj = jQuery.parseJSON(data.toString());
            var visible = ["status", "id", "items_count", "total_price", "time_ago"]

            if (obj.data.length > 0) {
                $("#"+status+"-payments").data().DinamicTable.methods.setContent(obj.data);
                $("#"+status+"-payments").data().DinamicTable.methods.setVisibleFields(visible);
                $("#"+status+"-payments").data().DinamicTable.methods.drawTable();
                $("#getdeposit.well").show();
                var total_pages = Math.ceil(obj.data[0].total_count / limit);

                var select = document.createElement("select");
                $(select).attr("id", "offset-" + status);
                $(select).append('<option value="10">10</option>');
                if (obj.data[0].total_count > 25)
                    $(select).append('<option value="25">25</option>');
                if (obj.data[0].total_count > 50)
                    $(select).append('<option value="50">50</option>');
                if (obj.data[0].total_count > 100)
                    $(select).append('<option value="100">100</option>');


                $(select).on("change", function() {
                    get_payments(status, 1, $(this).val(), currency);
                });

                var div = document.createElement("div")
                $(div).addClass("info");
                $(div).append("Mostrando&nbsp;");
                $(div).append(select);
                $(div).append("&nbsp;resultados por p&aacute;gina&nbsp;");
                $(div).append("de un total de <b>" + obj.data[0].total_count + " pagos " + status + "<b/>");
                /*
                var select2 = document.createElement("select");
                $(select2).append('<option value="USD" '+((currency=="USD")?"selected":"")+'>USD</option>');
                $(select2).append('<option value="MXN" '+((currency!="USD")?"selected":"")+'>MXN</option>');
                
                 $(select2).on("change", function() {
                    get_payments(status, 1, limit, $(this).val(),currency);
                });
                
                
                $(div).append(select2);
                */

                $("#" + status + "-payments").prepend(div);

                if (page <= 0)
                    page = 1;

                if (page > total_pages)
                    page = 1;

                var from = 0, to = 5;
                if (page <= 3) {
                    from = 1;
                }
                else if (page > 3) {
                    from = page - 2;
                }

                if ((page + 2) >= total_pages)
                    from = total_pages - 5;

                if (from < 0)
                    from = 1;
                to = from + 5;
                if (to > total_pages)
                    to = total_pages;

                var pagination = document.createElement('ul');
                $(pagination).addClass("pagination");
                $(pagination).append('<li class="' + ((page != 1) ? "" : 'disabled') + '"><a class="prev">&laquo;</a></li>');

                for (var i = from; i <= to; i++) {
                    var li = document.createElement("li");
                    var a = document.createElement("a");

                    $(a).html(i);
                    $(a).attr("data-index", i);

                    if (page == i) {
                        $(li).addClass("active");
                    } else {
                        $(a).click(function() {
                            get_payments(status, $(this).data().index, limit);
                        });
                    }
                    $(li).html(a);
                    $(pagination).append(li);
                }
                $(pagination).append('<li class="' + ((page != total_pages) ? "" : 'disabled') + '"><a class="next">&raquo;</a></li>');

                if (total_pages > 1) {
                    var input = document.createElement("input");
                    var form = document.createElement("form");
                    $(input).attr("type", "text");
                    $(input).val(page);
                    $(input).attr("class", "form-control");
                    $(input).keypress(function(evt) {
                        var charCode = (evt.which) ? evt.which : event.keyCode
                        if (charCode > 31 && (charCode < 48 || charCode > 57))
                            return false;
                        return true;
                    });
                    $(form).addClass("input-group");
                    $(form).css("float", "left");
                    $(form).addClass("gotoPage");
                    $(form).html(input);
                    $(form).attr("method", "post");
                    $(form).append('<span class="input-group-btn"><button class="btn btn-default" type="submit">Go!</button></span>');
                    $(form).on("submit", function() {
                        var p = parseInt($(this).find("input").val());
                        p = (p > total_pages) ? page : p;
                        get_payments(status, p, limit);
                        $(this).val(p);
                        return false;
                    });
                    $("#pagination-" + status).html(form);
                    
                    $(pagination).find("li[class!=disabled] a.next").click(function(){
                        get_payments(status, page+1, limit);
                    });
                    $(pagination).find("li[class!=disabled] a.prev").click(function(){
                        get_payments(status, page-1, limit);
                    });
                    
                    $("#pagination-" + status).append(pagination);
                }
                setTooltip($("#" + status + "-payments").find('.label.status'));
            } else {
                $("#" + status + "-payments").html("<span class='no'>" + kontrol_lang['payments_no_deposits']+"</span>");
                $("#getdeposit.well").remove();
            }
        });
    }


    $("#solicitar-deposito-btn").click(function() {
        call_api('/api/pagos/solicitar_deposito', 'post', {store_id: store_id}, function(data) {
            var obj = jQuery.parseJSON(data.toString());

            var text = kontrol_lang['payments_requests_1'] + obj.data.fecha_pago +
                    kontrol_lang['payments_requests_2'] + obj.data.banco_cuenta + kontrol_lang['payments_requests_3'] + obj.data.nombre_cuenta;

            $("#modal-pagos").find(".modal-body").html(text);
            $("#modal-pagos").modal("show");

            $("#modal-pagos .btn-primary").click(function() {
                call_api('/api/pagos/confirmar_solicitud_deposito', 'post', {store_id: store_id}, function(data) {
                    $("#modal-pagos").remove();
                    $("#getdeposit.well").remove();
                });

            });
        });
    });

    get_payments("available", 1, 10, "MXN");
    get_payments("pending", 1, 10, "MXN");
    get_payments("closed", 1, 10, "MXN");


});