/* 
 * V2 Sell.Kichink
 * Stores
 */
var changed_flag = 0; // change in an onchange event or whatever, something like the below

window.onbeforeunload = function() {
    if (changed_flag) {
        return 'You have unsubmitted changes.';
    }
};

$(document).ready(function() {


    $(".viewtoggle").find("button").each(function(i, e) {
        $(e).click(function() {
            if (!$(e).hasClass("active")) {
                $(".viewtoggle").find("button").removeClass("active");
                $(e).addClass("active");
                if ($(e).data().setToggle == "itemList") {
                    $(".itemBox").addClass("itemList");
                    $(".itemList").removeClass("itemBox");
                    $("#edit-menu").show();
                    $(".guardar").show();
                } else {
                    $(".itemList").addClass("itemBox");
                    $(".itemBox").removeClass("itemList");
                    $("#edit-menu").hide();
                    $(".guardar").hide();
                }
            }
        });
    });

    $(".guardar").click(function() {
        var arr = [];
        $("li.itemList.changed").each(function() {
            arr.push({live: $(this).data().live, id: $(this).data().id, precio: $(this).data().price});
        });
        if (changed_flag) {
            call_api('/api/items/update_items_properties', 'post', {store_id: store_id, json: JSON.stringify(arr)}, function(data) {
                changed_flag = 0;
                $(".itemList.changed").removeClass("changed");
                $("#preloader").data().Preloader.methods.hide();
            }, null, function() {
                $("#preloader").data().Preloader.methods.draw({issue: "Se actualizarÃ¡n " + $(".itemList.changed").length + " items"})
                $("#preloader").data().Preloader.methods.show();
            });
        }

    });

    $("#sortable_items").sortable({
        update: function() {
            var neworder = Array();
            $('#sortable_items li').each(function() {
                var id = $(this).attr('data-id');
                neworder.push(id);
            });
            call_api('/api/items/update_items_order', 'post', {store_id: store_id, newOrder: neworder}, function(data) {
            });
        }
    });

    $(".edit-attribute").change(function() {
        if ($(".edit-attribute").val() == "live") {
            $(".itemList .live").show();
            $(".itemList .price").hide();
        } else {
            $(".itemList .live").hide();
            $(".itemList .price").show();
        }
    });

    call_api('/api/stores/get_store_items', 'post', {"store_id": store_id, "category": "all"}, function(data) {
        var ajax_result = jQuery.parseJSON(data.toString());

        try {

            var storeItems = ajax_result.data;
            if (storeItems != undefined) {

                if (storeItems.length > 0) {

                    //Llenar grid de items

                    for (var i = 0; i < storeItems.length; i++) {

                        var item = storeItems[i];
                        var li = document.createElement("li");
                        $(li).addClass("itemBox");
                        $(li).attr("data-id", item.id);
                        $(li).data("id", item.id);
                        var rowItems = "<input type='checkbox'/>"
                        if (item.thumb != "none" && item.thumb != "" && item.thumb != undefined) {
                            rowItems += '<div style="background-image:url(' + item.thumb + ')" class="img"></div><a href="/items/id/' + item.id + '"><p>' + item.name + '</p></a>';
                        }
                        else {
                            rowItems += '<div style="background-image:url(http://placehold.it/160x160)" class="img"></div><a href="/items/id/' + item.id + '"><p>' + item.name + '</p></a>';
                        }

                        rowItems += '<span class="live"><input class="switch-small" type="checkbox" ' + (parseInt(item.live) ? "checked" : "") + ' data-text-label="LIVE" data-on="primary" data-off="danger"/></span>';
                        $(li).data("live", item.live);
                        rowItems += '<span class="price">' + item.price + '</span>';
                        $(li).data("originalprice", parseFloat(item.price));
                        $(li).data("price", parseFloat(item.price));
                        $(li).data("categories", item.categories);

                        $(li).html(rowItems);
                        $("#sortable_items").append(li);
                    }

                    $("#sortable_items").find("input[type=checkbox]").each(function(i, e) {
                        $(e).click(function() {
                            $(this).parent().toggleClass("checked");
                            $("#treetotalitems").html($("#sortable_items li.checked").length);
                        });
                    });

                    $('.live input[type="checkbox"].switch-small').bootstrapSwitch();

                    $('.live input[type="checkbox"].switch-small').on('switch-change', function(e, data) {
                        $(this).closest("li").data("live", ($(this).prop("checked")) ? 1 : 0);
                        $(this).closest("li").addClass("changed");
                        changed_flag++;
                    });

                    var switchToInput = function() {
                        var $input = $("<input>", {
                            val: $(this).text(),
                            type: "text"
                        });
                        $input.addClass("price");
                        $(this).replaceWith($input);
                        $input.on("blur", switchToSpan);
                        $input.select();
                    };
                    var switchToSpan = function() {
                        var $span = $("<span>");
                        $span.addClass("price");
                        var v = number_format($(this).val(), 2, ".", ",");

                        if (parseFloat(v.replace(",", "")) > 0) {
                            if ($(this).closest("li").data().originalprice != $(this).val()) {
                                $(this).closest("li").data("price", parseFloat(v.replace(",", "").replace(",", "")));
                                $(this).closest("li").data("originalprice", parseFloat(v.replace(",", "").replace(",", "")));
                                changed_flag++;
                                $(this).closest("li").addClass("changed");
                            }
                        } else {
                            $(this).closest("li").data("price", $(this).closest("li").data().originalprice);
                            v = number_format($(this).closest("li").data().originalprice, 2, ".", ",");
                        }

                        $span.html(v);
                        $(this).replaceWith($span);
                        $span.on("click", switchToInput);


                    }

                    $("li .price").each(function(i, e) {
                        $(e).on("click", switchToInput);
                    });
                    updatevitems();
                    $(".header-options").show();
                } else {
                    $(".header-options").remove();
                }
            } else {
                $(".header-options").remove();
            }
        } catch (e) {
            console.log(e);
        }

    }, null, function() {
    });

    call_api('/api/items/get_categories', 'post', {"store_id": store_id}, function(cats) {
        cats = jQuery.parseJSON(cats.toString());
        if (addSubCat($("#jstree_categories #maincats"), cats.data)) {
            doTree('#jstree_categories', ["wholerow", "types", "checkbox", "sort"]);
        }
        for (var i in cats.data) {
            var obj = cats.data[i];
            if (obj != undefined) {
                var l = document.createElement("li");
                $(l).attr("data-id", obj.id);
                $(l).html("<a href='#'>" + obj.name + "</a>");
                $(l).click(function() {
                    filterItems(this);
                    $("#sortable_items li.checked").removeClass("checked");
                    $("#sortable_items li input[class!=switch-small]").prop("checked", false);
                });
                $("#showcats").append(l);
            }
        }
    });

    $("#btn-delete-items").click(function() {
        if ($("#sortable_items li.checked").length > 0) {
            var tobedeleted = [];
            $("#sortable_items li.checked").find('input[class!=switch-small]:checked').each(function() {
                tobedeleted.push({deleted: 1, id: parseInt($(this).parent().data().id)});
            });

            call_api('/api/items/update_items_properties', 'post', {store_id: store_id, json: JSON.stringify(tobedeleted)}, function(data) {
                $("#sortable_items li.checked").remove();
                updatevitems();
                $("#preloader").data().Preloader.methods.hide();
            }, null, function() {
                $("#preloader").data().Preloader.methods.draw([{issue: "Se borrar&aacute;n " + tobedeleted.length + " items"}]);
                $("#preloader").data().Preloader.methods.show();
            });
        }
    });

    $(".allcategoriesfilter").click(function() {
        $("#sortable_items li.checked").removeClass("checked");
        $("#sortable_items li input[class!=switch-small]").prop("checked", false);
        $("#showcats").parent().find("a[data-toggle=dropdown]").html($(this).find("a").html());
        $("#sortable_items li").show();
        updatevitems();
    });


    $("#checkall").click(function() {
        if ($(this).hasClass("btn-success")) {
            $("#sortable_items").find("input[type=checkbox]").prop("checked", true);
            $(this).removeClass("btn-success");
            $(this).addClass("btn-danger");
            $(this).html('<span class="glyphicon glyphicon-unchecked"></span>&nbsp;');
            $(this).append($(this).data().uncheckedText);
        } else {
            $("#sortable_items").find("input[type=checkbox]").prop("checked", false);
            $(this).removeClass("btn-danger");
            $(this).addClass("btn-success");
            $(this).html('<span class="glyphicon glyphicon-check"></span>&nbsp;');
            $(this).append($(this).data().checkedText);
        }
    });

    $("#btn-add-categories").click(function() {
        var r = $("#jstree_categories").jstree(true);
        if (r) {
            r.deselect_all();

            var arr = [];
            $("li.checked").each(function() {
                arr = arr.concat($(this).data().categories)
            });
            for (i in arr) {
                if ($("li[data-id=" + arr[i].id + "]").length) {
                    var node = r.get_node($("li[data-id=" + arr[i].id + "]"));
                    r.select_node(node);
                }
            }
            $("#jstree_categories").data("", arr);
            $(".floatcategories").fadeIn("fast");
        }
    });

    $("#btn-save-categories").click(function() {
        if ($("#sortable_items li.checked").length > 0) {
            var r = $("#jstree_categories").jstree(true);
            var s = r.get_json(), a = [], b = [];
            var agregar = assigncategories(s[0], "add");
            var borrar = assigncategories(s[0], "delete");
            ;

            $("#sortable_items li.checked").each(function(i, e) {
                for (var j in agregar) {
                    if (agregar[j]) {
                        a.push({id: parseInt($(e).data().id), cat_id: agregar[j]});
                    }
                }
                $(e).data().categories = agregar;
            });

            $("#sortable_items li.checked").each(function(i, e) {
                for (var k in borrar)
                    if (borrar[k])
                        b.push({id: parseInt($(e).data().id), cat_id: borrar[k]});
            });


            call_api('/api/items/remove_item_from_category', 'post', {"store_id": store_id, json: JSON.stringify(b)}, function() {
                call_api('/api/items/add_item_to_category', 'post', {"store_id": store_id, json: JSON.stringify(a)}, function() {
                    $("#preloader").data().Preloader.methods.hide();
                }, null, function() {
                    $("#preloader").data().Preloader.methods.show();
                });
            }, null, function() {
                $("#preloader").data().Preloader.methods.draw([{issue: "Se borrar&aacute;n " + b.length + " categor&iacute;as de " + $("li.checked").length + " items"}, {issue: "Se asignar&aacute;n " + a.length + " categorias a " + $("li.checked").length + " items"}]);
            });
        }
        $(".floatcategories").fadeOut("fast");
    });

    $(".closetree").on("click", function() {
        $(".floatcategories").fadeOut("fast");
    });

    $(".floatcategories").on('mouseleave', function() {
        var timer = self.setInterval(function() {
            if ($(".floatcategories:hover").length < 1) {
                $(".floatcategories").fadeOut("fast");
            }
            window.clearInterval(timer);
        }, 3000);
    });


});

function updatevitems() {
    $("#totalitems").html($("#sortable_items").find("li:visible").length);
}

function assigncategories(cats, action) {
    var agregar = [];
    var borrar = [];
    var categories = [];

    for (var i in cats.children) {
        if (cats.children[i].children.length > 0) {
            agregar.concat(assigncategories(cats.children[i]), action);
        }
        else {
            categories.push(cats.children[i].text);
            if (cats.children[i].state.selected) {
                agregar.push(cats.children[i].data.id);
            }
            else {
                borrar.push(cats.children[i].data.id);
            }
        }

    }
    if (action == "add")
        return agregar;
    if (action == "delete")
        return borrar;
    return categories;
}

function filterItems(element) {
    $("#showcats").parent().find("a[data-toggle=dropdown]").html($(element).find("a").html());
    $("#sortable_items li").hide();
    $("#sortable_items li").each(function(i, e) {
        if ($(e).data().categories)
            for (var t = 0; t < $(e).data().categories.length; t++) {
                if (parseInt($(e).data().categories[t].id) == $(element).data().id) {
                    $(e).show();
                }
            }
    });
    updatevitems();
}
